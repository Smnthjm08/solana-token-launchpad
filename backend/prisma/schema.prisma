// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ChallengeStatus {
  UPCOMING
  IN_PROGRESS
  COMPLETED
  ENDED
}

enum ChallengeVisibility {
  PUBLIC
  PRIVATE
}

enum VerificationMethod {
  GOOGLE_FIT
  APPLE_HEALTH
  FITBIT
}

enum ParticipantStatus {
  ACTIVE
  COMPLETED
  FAILED
}

model User {
  id                Int      @id @default(autoincrement())
  name              String?
  image             String?
  username          String?
  isUsernamedEdited Boolean  @default(false)
  email             String   @unique
  password          String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relationships
  challenges       Challenge[]
  challengeEntries ChallengeParticipant[]
}

model Challenge {
  id                 Int              @id @default(autoincrement())
  name               String
  description        String?
  duration           Int
  goalSteps          Int
  numParticipants    Int                 @default(0)
  prizeMoney         Decimal             @default(0.0)
  entryAmount        Decimal             @default(0.0)
  status             ChallengeStatus
  featured           Boolean             @default(false)
  startDate          DateTime
  endDate            DateTime
  visibility         ChallengeVisibility
  verificationMethod VerificationMethod
  winnerDistribution Json?
  createdBy          Int // Reference to User ID
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt

  // Relationships
  creator      User                   @relation(fields: [createdBy], references: [id])
  participants ChallengeParticipant[]

  @@map("challenges")
}

model ChallengeParticipant {
  id          Int            @id @default(autoincrement())
  userId      Int
  challengeId Int
  progress    Int               @default(0)
  status      ParticipantStatus
  joinedAt    DateTime          @default(now())

  // Relationships
  user      User      @relation(fields: [userId], references: [id])
  challenge Challenge @relation(fields: [challengeId], references: [id])

  @@map("challenge_participants")
}
